name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean stageApp jpackageImage

      - name: Create Windows release archive
        run: |
          cd build/jpackage
          Compress-Archive -Path "JGroundControl" -DestinationPath "../JGroundControl-Windows.zip"

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: JGroundControl-Windows
          path: build/JGroundControl-Windows.zip

  build-ubuntu:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-0 libasound2 libx11-6 libxext6 libxrender1 libxi6 libxtst6 libxrandr2 libgl1

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean stageApp jpackageImage

      - name: Create Linux release archive
        run: |
          cd build/jpackage
          tar -czf ../JGroundControl-Linux.tar.gz JGroundControl

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: JGroundControl-Linux
          path: build/JGroundControl-Linux.tar.gz

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean stageApp jpackageImage

      - name: Create macOS release archive
        run: |
          cd build/jpackage
          tar -czf ../JGroundControl-macOS.tar.gz JGroundControl

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: JGroundControl-macOS
          path: build/JGroundControl-macOS.tar.gz

  create-release:
    needs: [build-windows, build-ubuntu, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
          name: JGroundControl ${{ github.event.inputs.version || github.ref_name }}
          body: |
            ## JGroundControl Release ${{ github.event.inputs.version || github.ref_name }}
            
            ### 下载说明
            - **Windows**: 下载 `JGroundControl-Windows.zip`，解压后运行 `JGroundControl.exe`
            - **Linux**: 下载 `JGroundControl-Linux.tar.gz`，解压后运行 `./JGroundControl/bin/JGroundControl`
            - **macOS**: 下载 `JGroundControl-macOS.tar.gz`，解压后运行 `./JGroundControl/bin/JGroundControl`
            
            ### 系统要求
            - Java 21 运行时环境
            - 各平台对应的系统依赖库（详见README.md）
            
            ### 功能特性
            - 多平台地面站控制软件
            - 支持串口和网络通信
            - 多语言界面支持
            - 参数配置和状态监控
          files: |
            artifacts/JGroundControl-Windows/JGroundControl-Windows.zip
            artifacts/JGroundControl-Linux/JGroundControl-Linux.tar.gz
            artifacts/JGroundControl-macOS/JGroundControl-macOS.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
