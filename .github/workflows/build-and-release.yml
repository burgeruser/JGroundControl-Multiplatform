name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean stageApp jpackageImage

      - name: Verify Windows build output
        run: |
          echo "=== Verifying Windows build output ==="
          if (Test-Path "build/jpackage/JGroundControl") {
            echo "✅ JGroundControl directory found"
            Get-ChildItem -Path "build/jpackage/JGroundControl/" -Force
          } else {
            echo "❌ JGroundControl directory not found"
            exit 1
          }

      - name: Create Windows release archive
        run: |
          cd build/jpackage
          Compress-Archive -Path "JGroundControl" -DestinationPath "JGroundControl-Windows.zip"
          Move-Item "JGroundControl-Windows.zip" "../"

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: JGroundControl-Windows
          path: build/JGroundControl-Windows.zip

  build-ubuntu:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-0 libasound2 libx11-6 libxext6 libxrender1 libxi6 libxtst6 libxrandr2 libgl1

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean stageApp jpackageImage

      - name: Verify Linux build output
        run: |
          echo "=== Verifying Linux build output ==="
          if [ -d "build/jpackage/JGroundControl" ]; then
            echo "✅ JGroundControl directory found"
            ls -la build/jpackage/JGroundControl/
          else
            echo "❌ JGroundControl directory not found"
            exit 1
          fi

      - name: Create Linux release archive
        run: |
          cd build/jpackage
          tar -czf ../JGroundControl-Linux.tar.gz JGroundControl

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: JGroundControl-Linux
          path: build/JGroundControl-Linux.tar.gz

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build with Gradle
        run: |
          echo "Starting Gradle build..."
          ./gradlew clean stageApp jpackageImage
          echo "Gradle build completed"

      - name: Verify macOS build output
        run: |
          echo "=== Verifying macOS build output ==="
          if [ -d "build/jpackage/JGroundControl" ]; then
            echo "✅ JGroundControl directory found"
            ls -la build/jpackage/JGroundControl/
          else
            echo "❌ JGroundControl directory not found in build/jpackage/"
            echo "Build output:"
            ls -la build/jpackage/ || echo "jpackage directory does not exist"
            exit 1
          fi

      - name: Create macOS release archive
        run: |
          echo "=== Creating macOS release archive ==="
          cd build/jpackage
          tar -czf ../JGroundControl-macOS.tar.gz JGroundControl
          echo "✅ Archive created successfully"
          ls -la ../JGroundControl-macOS.tar.gz

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: JGroundControl-macOS
          path: build/JGroundControl-macOS.tar.gz

  create-release:
    needs: [build-windows, build-ubuntu, build-macos]
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Verify all artifacts
        run: |
          echo "=== Verifying all build artifacts ==="
          ls -la artifacts/
          echo ""
          echo "Windows artifact:"
          ls -la artifacts/JGroundControl-Windows/ || echo "Windows artifact missing"
          echo ""
          echo "Linux artifact:"
          ls -la artifacts/JGroundControl-Linux/ || echo "Linux artifact missing"
          echo ""
          echo "macOS artifact:"
          ls -la artifacts/JGroundControl-macOS/ || echo "macOS artifact missing"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
          name: JGroundControl ${{ github.event.inputs.version || github.ref_name }}
          body: |
            ## JGroundControl Release ${{ github.event.inputs.version || github.ref_name }}
            
            ### Download Instructions
            - **Windows**: Download `JGroundControl-Windows.zip`, extract and run `JGroundControl.exe`
            - **Linux**: Download `JGroundControl-Linux.tar.gz`, extract and run `./JGroundControl/bin/JGroundControl`
            - **macOS**: Download `JGroundControl-macOS.tar.gz`, extract and run `./JGroundControl/bin/JGroundControl`
            
            ### System Requirements
            - Java 21 runtime environment
            - Platform-specific system dependencies (see README.md for details)
            
            ### Features
            - Multi-platform ground control station software
            - Serial and network communication support
            - Multi-language interface support
            - Parameter configuration and status monitoring
          files: |
            artifacts/JGroundControl-Windows/JGroundControl-Windows.zip
            artifacts/JGroundControl-Linux/JGroundControl-Linux.tar.gz
            artifacts/JGroundControl-macOS/JGroundControl-macOS.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
